akeni24@AbinetGKenore:~/LinuxC$ cat chmodLinuxNote.txt
08/26/24

# Change permissions

man Chmod gives the following defintion for chmodchmod changes the file mode bits
        of each given file according to mode, which can be either a symbolic
        representation of changes to make, or an octal  number  representing
        the bit pattern for the new mode bits.

Simplr => chomd is change the file permissions of files and directories

#  Permissions determine who can read, write, or execute a file or directory.

Read (r) - Allows reading the contents of the file or listing the contents of the
        directory.
Write (w) - Allows modifying the contents of the file or adding/removing files in
        the directory.
Execute (x) - Allows executing the file as a program or entering the directory (cd)

Each file or directory has three sets of permissions:

User (u): The owner of the file.
Group (g): The group that the file belongs to.
Others (o): Everyone else.
All (a): All

Permissions can also be represented by a three-digit octal number, where each digit
represents the permissions for the user, group, and others:

Read (r) = 4
Write (w) = 2
Execute (x) = 1

when you do ls -la on a file you see something similar to
        drwxr-xr-x
        -rw-------
        drwxr-xr-x
        drwxrwxrwx : Ideal case

Changing permissions
+       adds permissions to the user, group, or other
-       removes permissions from the user, group, or other
=       assigns permissions for the user, group, or other



The octal (0-7) value is calculated by adding up the values for each digit
User (rwx) = 4+2+1 = 7
Group(rx) = 4+1 = 5
World (rx) = 4+1 = 5
chmode mode = 0755

Each digit is the sum of the permissions:

- 7 = Read + Write + Execute (4 + 2 + 1)
- 6 = Read + Write (4 + 2)
- 5 = Read + Execute (4 + 1)
- 4 = Read only
- 3 = Write + Execute (2 + 1)
- 2 = Write only
- 1 = Execute only
- 0 = No permissions

Examples:
            chmod 777 filename means (User, Group, Others: read, write, execute)
            chmod 600 filename means  (User: read, write; Group: none; Others: none
            chmod 444 file - Allow read permission to owner and group and world)

Let us see examples
Symbolic Mode (Using Symbols):
   chmod [who][operator][permissions] filename

   - who: `u` (user), `g` (group), `o` (others), `a` (all)
   - operator: `+` (add), `-` (remove), `=` (set exact)
   - permissions: `r` (read), `w` (write), `x` (execute)

Add execute permission for the user:
        chmod u+x filename

Remove write permission for the group:
        chmod g-w filename

Set read and write permissions for all:
        chmod a=rw filename

Add read permission for everyone:
        chmod a+r filename


All in One:

Add all permissions to filename:
        chmod u+rwx,g+rwx,o+rwx filename

Take all the permissions away:
        chmod u-rwx,g-rwx,o-rwx filename

Set read permissions for user, group, and other:
        chmod u=r,g=r,o=r

Grant all read permission
        chmod a+r filename

Deny all write permission
        chmod a-w filename


Remove all permissions for others:
        chmod o-rwx

# keep doing for the varity of opitions

Note: Checking current permissions
        ls -l

Result:
        -rwx-rw-r- 1 akeni24 akeni24 1869 Aug 20 19:19 dumntext.txt

Meaning
        -rw-r--r--: Represents the permissions.
        -rwx-: User permissions (read, write, excute).
        r--: Group permissions (read), write.
        r--: Others permissions (read).


#Numeric Mode (Using Numbers)

syntax:
        chmod ### filename

Set read, write, and execute permissions for everyone:
        chmod 777 filename

Set full permissions for the user, and read and execute for group and others:
        chmod 755 filename

Set read and write permissions for the user, and no permissions for group and others:
        chmod 600 filename

To change permissions for a directory and all its contents recursively:
        chmod -R 755 directory_name


Source: https://ss64.com/bash/chmod.html
